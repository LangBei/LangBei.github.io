<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>redis-expire-date</title>
      <link href="2021/04/18/redis-expire-date/"/>
      <url>2021/04/18/redis-expire-date/</url>
      
        <content type="html"><![CDATA[<p>当Redis中存在一个键值对[过期时间暂定30分钟]，当重新塞入相同的键值对，过期时间仍为30分钟</p><hr><p>Welcome to <a href="https://langbei.github.io/">MyBlog</a> You can find any information you want.If not, please contact me.Welcome everyone to put forward your suggestions for amendments to my article.Please leave your suggestions on my <a href="https://github.com/LangBei/LangBei.github.io">GitHub</a> or <a href="">Gitee</a>, thank you!</p><h2 id="question"><a href="#question" class="headerlink" title="question"></a>question</h2><p>当Redis中存在一个键值对[过期时间暂定30分钟]，当重新塞入相同的键值对，过期时间仍为30分钟，重新更新值对过期时间不影响</p><h2 id="Quick-Start-Editor-IDEA-Ultimate-2018-1"><a href="#Quick-Start-Editor-IDEA-Ultimate-2018-1" class="headerlink" title="Quick Start (Editor IDEA Ultimate 2018.1)"></a>Quick Start (Editor IDEA Ultimate 2018.1)</h2><h3 id="省去添加Redis依赖的步骤"><a href="#省去添加Redis依赖的步骤" class="headerlink" title="省去添加Redis依赖的步骤"></a>省去添加Redis依赖的步骤</h3><ol><li>RedisTemplate</li></ol><h3 id="首先测试重复塞入值对过期时间的影响"><a href="#首先测试重复塞入值对过期时间的影响" class="headerlink" title="首先测试重复塞入值对过期时间的影响"></a>首先测试重复塞入值对过期时间的影响</h3><ul><li>代码<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line">import org.springframework.data.redis.core.StringRedisTemplate;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line">import org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line">import java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * author:NWS</span><br><span class="line"> * Date:2021&#x2F;4&#x2F;18  0:10</span><br><span class="line"> * 描述：</span><br><span class="line"> *&#x2F;</span><br><span class="line">@RestController</span><br><span class="line">public class redisTemTest &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private RedisTemplate redisTemplate;</span><br><span class="line">    @Autowired</span><br><span class="line">    private StringRedisTemplate stringRedisTemplate;</span><br><span class="line"></span><br><span class="line">    @RequestMapping(value &#x3D; &quot;&#x2F;test&quot;,method &#x3D; RequestMethod.GET)</span><br><span class="line">    public String test() throws Exception &#123;</span><br><span class="line">        redisTemplate.opsForValue().set(&quot;hello&quot;,&quot;world&quot;,60 * 30,TimeUnit.SECONDS);</span><br><span class="line">        System.out.println(&quot;第一次塞入值过期时间为：&quot;+redisTemplate.getExpire(&quot;hello&quot;));</span><br><span class="line">        Thread.sleep(1000 * 5);</span><br><span class="line">        redisTemplate.opsForValue().set(&quot;hello&quot;,&quot;world&quot;,60 * 30,TimeUnit.SECONDS);</span><br><span class="line">        System.out.println(&quot;第二次塞入值过期时间为：&quot;+redisTemplate.getExpire(&quot;hello&quot;));</span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>输出<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">第一次塞入值过期时间为：1800</span><br><span class="line">第二次塞入值过期时间为：1800</span><br></pre></td></tr></table></figure></li><li>结论<br>当Redis更新值后过期时间被重新设置<br>redis的官方文档, 他们是这么解释的:<br>The timeout will only be cleared by commands that delete or overwrite the contents of the key, including DEL, SET, GETSET and all the *STORE commands. This means that all the operations that conceptually alter the value stored at the key without replacing it with a new one will leave the timeout untouched. For instance, incrementing the value of a key with INCR, pushing a new value into a list with LPUSH, or altering the field value of a hash with HSET are all operations that will leave the timeout untouched.<br>解释：<br>如果用DEL, SET, GETSET会将key对应存储的值替换成新的，命令也会清除掉超时时间；如果list结构中添加一个数据或者改变hset数据的一个字段是不会清除超时时间的；如果想要通过set去覆盖值那就必须重新设置expire。<h3 id="重新计算值后塞入，更新过期时间"><a href="#重新计算值后塞入，更新过期时间" class="headerlink" title="重新计算值后塞入，更新过期时间"></a>重新计算值后塞入，更新过期时间</h3></li><li>代码<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line">import org.springframework.data.redis.core.StringRedisTemplate;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line">import org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line">import java.time.Instant;</span><br><span class="line">import java.util.Date;</span><br><span class="line">import java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * author:NWS</span><br><span class="line"> * Date:2021&#x2F;4&#x2F;18  0:10</span><br><span class="line"> * 描述：</span><br><span class="line"> *&#x2F;</span><br><span class="line">@RestController</span><br><span class="line">public class redisTemTest &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private RedisTemplate redisTemplate;</span><br><span class="line">    @Autowired</span><br><span class="line">    private StringRedisTemplate stringRedisTemplate;</span><br><span class="line"></span><br><span class="line">    @RequestMapping(value &#x3D; &quot;&#x2F;test&quot;,method &#x3D; RequestMethod.GET)</span><br><span class="line">    public String test() throws Exception &#123;</span><br><span class="line">        redisTemplate.opsForValue().set(&quot;hello&quot;,&quot;world&quot;,60 * 30,TimeUnit.SECONDS);</span><br><span class="line">        System.out.println(&quot;第一次塞入值过期时间为：&quot;+redisTemplate.getExpire(&quot;hello&quot;));</span><br><span class="line">        Thread.sleep(1000 * 5);</span><br><span class="line">&#x2F;&#x2F;        redisTemplate.opsForValue().set(&quot;hello&quot;,&quot;world&quot;,60 * 30,TimeUnit.SECONDS);</span><br><span class="line">&#x2F;&#x2F;        System.out.println(&quot;第二次塞入值过期时间为：&quot;+redisTemplate.getExpire(&quot;hello&quot;));</span><br><span class="line">        Date date &#x3D; new Date(Instant.now().toEpochMilli() + redisTemplate.getExpire(&quot;hello&quot;) * 1000);</span><br><span class="line">        redisTemplate.expireAt(&quot;hello&quot;,date);</span><br><span class="line">        System.out.println(&quot;第二次塞入值过期时间为：&quot;+redisTemplate.getExpire(&quot;hello&quot;));</span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>输出<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">第一次塞入值过期时间为：1800</span><br><span class="line">第二次塞入值过期时间为：1795</span><br></pre></td></tr></table></figure></li><li>结论<br>过期时间已经被更新，借助的方法为逻辑计算后更新  </li></ul><hr><ol start="2"><li>StringRedisTemplate</li></ol><p>StringRedisTemplate的方法与RedisTemplate相同，因此，StringRedisTemplate测试方法、类与RedisTemplate相同，都是先将过期时间取出，然后进行逻辑计算，最后更新Redis中的值</p><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><ol><li>StringRedisTemplate与RedisTemplate用法基本相同;</li><li>StringRedisTemplate与RedisTemplate都不可以直接更新值的同时保留键值对的过期时间,如果直接更新，会将键值对的过期时间重置,因此,更新前需要将过期时间取出并计算后重新更新,即可解决问题</li></ol><h3 id="参考文章链接"><a href="#参考文章链接" class="headerlink" title="参考文章链接"></a>参考文章链接</h3><p><a href="https://blog.csdn.net/weixin_40910372/article/details/103834935">blog</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> redis过期时间延长 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>computer failure repair</title>
      <link href="2021/04/13/computer-failure-repair/"/>
      <url>2021/04/13/computer-failure-repair/</url>
      
        <content type="html"><![CDATA[<p>电脑故障维修[笔记本电脑]–屏幕黑掉，但电脑仍在运行</p><hr><p>Welcome to <a href="https://langbei.github.io/">MyBlog</a> You can find any information you want.If not, please contact me.Welcome everyone to put forward your suggestions for amendments to my article.Please leave your suggestions on my <a href="https://github.com/LangBei/LangBei.github.io">GitHub</a> or <a href="">Gitee</a>, thank you!</p><h2 id="Quick-Start-机械师M511"><a href="#Quick-Start-机械师M511" class="headerlink" title="Quick Start [机械师M511]"></a>Quick Start [机械师M511]</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>笔记本使用期间突然黑屏，但是仍然在运行，没有关机[外接显示器的时候，笔记本自身屏幕变黑，外接显示器仍然可以正常办公使用]</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>检查显示器的屏线是否接触不良[拆解显示器教程需要自行百度，每个型号有具体的拆解教程]</p>]]></content>
      
      
      
        <tags>
            
            <tag> 电脑故障维修[笔记本电脑]--屏幕黑掉，但电脑仍在运行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot-implod-redis</title>
      <link href="2021/04/12/springboot-implod-redis/"/>
      <url>2021/04/12/springboot-implod-redis/</url>
      
        <content type="html"><![CDATA[<p>SpringBoot集成Redis[SpringBoot版本2.3.3.RELEASE，SpringBoot-redis版本2.3.0.RELEASE]</p><p>Welcome to <a href="https://langbei.github.io/">MyBlog</a> You can find any information you want.If not, please contact me.Welcome everyone to put forward your suggestions for amendments to my article.Please leave your suggestions on my <a href="https://github.com/LangBei/LangBei.github.io">GitHub</a> or <a href="">Gitee</a>, thank you!</p><h2 id="Quick-Start-Editor-IDEA-Ultimate-2018-1"><a href="#Quick-Start-Editor-IDEA-Ultimate-2018-1" class="headerlink" title="Quick Start (Editor IDEA Ultimate 2018.1)"></a>Quick Start (Editor IDEA Ultimate 2018.1)</h2><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- https:&#x2F;&#x2F;mvnrepository.com&#x2F;artifact&#x2F;org.springframework.boot&#x2F;spring-boot-starter-data-redis --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-data-redis&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.3.0.RELEASE&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@RestController</span><br><span class="line">public class redisTestController &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private StringRedisTemplate stringRedisTemplate;</span><br><span class="line"></span><br><span class="line">    @RequestMapping(method &#x3D; RequestMethod.GET,value &#x3D; &quot;&#x2F;testRedis&quot;)</span><br><span class="line">    public String redisTest()&#123;</span><br><span class="line">        String key &#x3D; &quot;hello&quot;;</span><br><span class="line">        stringRedisTemplate.opsForValue().set(key,&quot;world&quot;);</span><br><span class="line">        String value &#x3D; stringRedisTemplate.opsForValue().get(key);</span><br><span class="line">        return value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如网页上可以返回world，证明Redis集成成功<br>此处先用stringRedisTemplate进行测试，后面的文章具体描述stringRedisTemplate 与 redisTemplate 的区别</p><h3 id="总结：SpringBoot集成Redis只需要引入SpringBoot-Redis依赖，然后在需要的地方进行-Autowired注入即可使用stringRedisTemplate-或-redisTemplate"><a href="#总结：SpringBoot集成Redis只需要引入SpringBoot-Redis依赖，然后在需要的地方进行-Autowired注入即可使用stringRedisTemplate-或-redisTemplate" class="headerlink" title="总结：SpringBoot集成Redis只需要引入SpringBoot-Redis依赖，然后在需要的地方进行@Autowired注入即可使用stringRedisTemplate 或 redisTemplate"></a>总结：SpringBoot集成Redis只需要引入SpringBoot-Redis依赖，然后在需要的地方进行@Autowired注入即可使用stringRedisTemplate 或 redisTemplate</h3>]]></content>
      
      
      
        <tags>
            
            <tag> springboot-implod-redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to create a SpringBoot project</title>
      <link href="2021/04/11/How-to-create-a-SpringBoot-project/"/>
      <url>2021/04/11/How-to-create-a-SpringBoot-project/</url>
      
        <content type="html"><![CDATA[<p>如何创建一个简单的SpringBoot项目[仅含web依赖]  </p><p>Welcome to <a href="https://langbei.github.io/">MyBlog</a> You can find any information you want.If not, please contact me.Welcome everyone to put forward your suggestions for amendments to my article.Please leave your suggestions on my <a href="https://github.com/LangBei/LangBei.github.io">GitHub</a> or <a href="">Gitee</a>, thank you!</p><h2 id="Quick-Start-Editor-IDEA-Ultimate-2018-1"><a href="#Quick-Start-Editor-IDEA-Ultimate-2018-1" class="headerlink" title="Quick Start (Editor IDEA Ultimate 2018.1)"></a>Quick Start (Editor IDEA Ultimate 2018.1)</h2><h3 id="what-is-SpringBoot"><a href="#what-is-SpringBoot" class="headerlink" title="what is SpringBoot?"></a>what is SpringBoot?</h3><p>SpringBoot是由Pivotal团队在2013年开始研发、2014年4月发布第一个版本的全新开源的轻量级框架。它基于Spring4.0设计，不仅继承了Spring框架原有的优秀特性，而且还通过简化配置来进一步简化了Spring应用的整个搭建和开发过程。另外SpringBoot通过集成大量的框架使得依赖包的版本冲突，以及引用的不稳定性等问题得到了很好的解决。</p><h3 id="Advantages-of-SpringBoot"><a href="#Advantages-of-SpringBoot" class="headerlink" title="Advantages of SpringBoot?"></a>Advantages of SpringBoot?</h3><ol><li>可以创建独立的Spring应用程序，并且基于其Maven或Gradle插件，可以创建可执行的JARs和WARs；</li><li>内嵌Tomcat或Jetty等Servlet容器；</li><li>提供自动配置的“starter”项目对象模型（POMS）以简化Maven配置；</li><li>尽可能自动配置Spring容器；</li><li>提供准备好的特性，如指标、健康检查和外部化配置；</li><li>绝对没有代码生成，不需要XML配置。</li></ol><p>URL: [<a href="https://baike.baidu.com/item/Spring%20Boot/20249767?fr=aladdin%5D">https://baike.baidu.com/item/Spring%20Boot/20249767?fr=aladdin]</a></p><h3 id="How-to-create-SpringBoot-project"><a href="#How-to-create-SpringBoot-project" class="headerlink" title="How to create SpringBoot project?"></a>How to create SpringBoot project?</h3><p>File -&gt; New -&gt; Project -&gt; Spring Initializr -&gt; Select JDK and default choose Initializr Service URL[<a href="https://start.spring.io/]">https://start.spring.io/]</a> -&gt; write project metadata -&gt; Next -&gt; select dependency(It is recommended to choose web dependency) -&gt; Next -&gt; select project Path -&gt; Finish  </p><h4 id="A-simple-SpringBoot-is-created"><a href="#A-simple-SpringBoot-is-created" class="headerlink" title="A simple SpringBoot is created"></a>A simple SpringBoot is created</h4>]]></content>
      
      
      
        <tags>
            
            <tag> Create a simple SpringBoot project </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>my-first-blog</title>
      <link href="2021/02/03/my-first-blog/"/>
      <url>2021/02/03/my-first-blog/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://langbei.github.io/">MyBlog</a> You can find any information you want.If not, please contact me.Welcome everyone to put forward your suggestions for amendments to my article.Please leave your suggestions on my <a href="https://github.com/LangBei/LangBei.github.io">GitHub</a> or <a href="">Gitee</a>, thank you!</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="What-is-maven"><a href="#What-is-maven" class="headerlink" title="What is maven ?"></a>What is maven ?</h3><p>Maven 翻译为”专家”、”内行”，是 Apache 下的一个纯 Java 开发的开源项目。基于项目对象模型（缩写：POM）概念，Maven利用一个中央信息片断能管理一个项目的构建、报告和文档等步骤。<br>Maven 是一个项目管理工具，可以对 Java 项目进行构建、依赖管理。</p><h3 id="Advantages-of-maven"><a href="#Advantages-of-maven" class="headerlink" title="Advantages of maven ?"></a>Advantages of maven ?</h3><ol><li>简化了项目依赖管理：</li><li>易于上手，对于新手可能一个”mvn clean package”命令就可能满足他的工作</li><li>便于与持续集成工具（jenkins）整合</li><li>便于项目升级，无论是项目本身升级还是项目使用的依赖升级。</li><li>有助于多模块项目的开发，一个模块开发好后，发布到仓库，依赖该模块时可以直接从仓库更新，而不用自己去编译。</li><li>maven有很多插件，便于功能扩展，比如生产站点，自动发布版本等</li></ol><h3 id="How-to-install-maven"><a href="#How-to-install-maven" class="headerlink" title="How to install maven ?"></a>How to install maven ?</h3><h4 id="first"><a href="#first" class="headerlink" title="first"></a>first</h4><p>安装<a href="https://www.oracle.com/java/technologies/javase-downloads.html">JDK</a>、<a href="https://www.oracle.com/java/technologies/oracle-java-archive-downloads.html">历史版本</a></p><h4 id="second"><a href="#second" class="headerlink" title="second"></a>second</h4><p>下载maven<a href="https://maven.apache.org/">下载地址</a> -&gt; <a href="https://maven.apache.org/download.cgi">download</a></p><h4 id="third"><a href="#third" class="headerlink" title="third"></a>third</h4><p>解压文件 -&gt; 配置环境变量<br>如何验证环境变量是否配置成功：<br>win + R -&gt; cmd -&gt; mvn version</p><h4 id="fourth"><a href="#fourth" class="headerlink" title="fourth"></a>fourth</h4><p>配置maven，提供给idea使用：<br>maven -&gt; 新建 maven-respository，从远程下载的java jar包都会放在这里 -&gt;<br>配置settings.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml">找到<span class="hljs-tag">&lt;<span class="hljs-name">localRepository</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">localRepository</span>&gt;</span>标签<br><span class="hljs-tag">&lt;<span class="hljs-name">localRepository</span>&gt;</span>XXXXXXXXXXXXXX[配置你的maven-respository，例如：D:\java file\apache-maven-3.6.1-bin\apache-maven-3.6.1\maven-respository]<span class="hljs-tag">&lt;/<span class="hljs-name">localRepository</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml">找到<span class="hljs-tag">&lt;<span class="hljs-name">mirrors</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mirrors</span>&gt;</span>标签，并添加<br><span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>alimaven<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>central<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>aliyun maven<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span><br>意思为：添加阿里云为远程仓库，创建maven项目将从阿里云仓库下载，如果不配置，从maven远程仓库下载速度慢<br></code></pre></td></tr></table></figure><h4 id="last"><a href="#last" class="headerlink" title="last"></a>last</h4><p>maven配置已经完成！</p>]]></content>
      
      
      
        <tags>
            
            <tag> first-blog-maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/01/22/hello-world/"/>
      <url>2021/01/22/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>my-first-blog-test</title>
      <link href="2021/01/11/my-first-blog-test/"/>
      <url>2021/01/11/my-first-blog-test/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h2 id="测试博客"><a href="#测试博客" class="headerlink" title="测试博客"></a>测试博客</h2>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
